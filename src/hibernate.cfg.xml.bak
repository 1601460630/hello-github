<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
    	<!--数据库驱动-->
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>   
        <!--数据库URL-->
        <property name="hibernate.connection.url">jdbc:mysql:///ssh_crm</property>
        <!--数据库用户名-->
        <property name="hibernate.connection.username">root</property>
        <!--数据库密码-->
        <property name="hibernate.connection.password">123456</property>
        <!--数据库方言
           	 在不同的数据库中，sql语法略有不同，指定繁衍可以让hibernate框架生成sql语句时更有针对性，
            sql99标准：DDL  数据定义语言  库表的增删改查  create table,alter table，drop table，truncate table 等等
                     DCL  数据控制语言  权限  grant 权限 to scott，revoke 权限 from scott 等等
                     DML  数据操纵语言  增删改查  select,insert,update,delete
                     TCL  事务控制语言  事务  commit，rollback，rollback to savepoint 等等
            	注意：MySql在选择方言时选择MySQLDialect类型
        -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
    
    
    	<!-- #hibernate.show_sql true     显示sql语句
			 #hibernate.format_sql true   格式化sql语句
		-->
    	<property name="hibernate.show_sql">true</property>
    	<property name="hibernate.format_sql">true</property>
    	
    	<!--
			## auto schema export                自动导出表结构：表不存在时自动建表
			#hibernate.hbm2ddl.auto create       自动建表，每次框架运行都会创建一个新的表，以前的数据会丢失，一般在开发测试时使用
			#hibernate.hbm2ddl.auto create-drop  自动建表，每次框架运行结束都会将所有的表删除，一般在开发测试时使用
			#hibernate.hbm2ddl.auto update       自动生成表，如果已经存在不会再生成，如果表有变动，自动更新表（不会删除任何数据），推荐使用
			#hibernate.hbm2ddl.auto validate     校验，任何情况下不会自动生成表，每次启动会校验数据库中的表是否正确，校验失败会抛出异常
		-->
    	
    	<property name="hibernate.hbm2ddl.auto">update</property>
    	<!--引入orm元数据
           	 路径书写：填写src下的路径
        -->
        
		<!-- 指定session与当前线程绑定,在三个框架一起整合后千万不要配 -->
        <!--  <property name="hibernate.current_session_context_class">thread</property>  -->
    	
    	<mapping resource="cn/itcast/domain/Customer.hbm.xml"/>
    	<mapping resource="cn/itcast/domain/LinkMan.hbm.xml"/>
    	<mapping resource="cn/itcast/domain/User.hbm.xml"/>
    </session-factory>
</hibernate-configuration>
